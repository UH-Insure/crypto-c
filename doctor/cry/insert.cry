// assumes that `xs` is sorted
insert : {n, a} (fin n, Cmp a) => a -> [n]a -> [n+1]a
insert x' xs 
  | n == 0         => [x']
  | n == 1         => if x' <= x then [x', x] else [x, x']
                      where [x] = xs
  | ( n % 2 == 0
    , n     >  1 ) => if x' <= x 
                        then insert x' (xs1 # [x]) # xs2 
                        else xs1 # [x] # insert x' xs2
                      where (xs1 : [n/2 - 1]_) # [x] # (xs2 : [n/2]_) = xs
  | ( n % 2 == 1
    , n     >  1 ) => if x' <= x 
                        then insert x' (xs1 # [x]) # xs2
                        else xs1 # [x] # insert x' xs2
                      where (xs1 : [n/2]_) # [x] # (xs2 : [n/2]_) = xs

property insert_correct =
  (insert 0 [  1,2,3,4,5,6,7,8,9] == [0,1,2,3,4,5,6,7,8,9]) &&
  (insert 1 [0,  2,3,4,5,6,7,8,9] == [0,1,2,3,4,5,6,7,8,9]) &&
  (insert 2 [0,1,  3,4,5,6,7,8,9] == [0,1,2,3,4,5,6,7,8,9]) &&
  (insert 3 [0,1,2,  4,5,6,7,8,9] == [0,1,2,3,4,5,6,7,8,9]) &&
  (insert 4 [0,1,2,3,  5,6,7,8,9] == [0,1,2,3,4,5,6,7,8,9]) &&
  (insert 5 [0,1,2,3,4,  6,7,8,9] == [0,1,2,3,4,5,6,7,8,9]) &&
  (insert 6 [0,1,2,3,4,5,  7,8,9] == [0,1,2,3,4,5,6,7,8,9]) &&
  (insert 7 [0,1,2,3,4,5,6,  8,9] == [0,1,2,3,4,5,6,7,8,9]) &&
  (insert 8 [0,1,2,3,4,5,6,7,  9] == [0,1,2,3,4,5,6,7,8,9]) &&
  (insert 9 [0,1,2,3,4,5,6,7,8  ] == [0,1,2,3,4,5,6,7,8,9])
